<?xml version="1.0" encoding="UTF-8" ?>

<configuration scan="true" scanPeriod="60 seconds">
    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%clr([TID: %X{tid}]) %d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>


    <contextName>example</contextName>

    <!--定义日志文件的存储地址 -->
    <property name="LOG_HOME" value="logs"/>

    <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <appender name="RollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <!-- 可让每天产生一个日志文件，最多 180 个，自动回滚 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>./${LOG_HOME}/%d{yyyy-MM,aux}/zjapp-%d{yyyy-MM-dd}.log
            </fileNamePattern>
            <!-- keep 180 days' worth of history capped at 50GB total size -->
            <maxHistory>180</maxHistory>
            <totalSizeCap>40GB</totalSizeCap>
        </rollingPolicy>
        <!-- 日志文件的格式 -->
        <encoder>
            <Pattern>[TID: %X{tid}] %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level --- [%file:%line] [%thread] - %msg%n</Pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!--异步日志-->
    <appender name="AsyncRollingFile" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="RollingFile"/>
        <!--开启后，会提取调用者数据，比如代码行号。但是有性能损失，百倍左右。-->
        <!--默认false，当event被加入到queue时，只保留"cheap"的数据，如线程名,MDC。-->
        <includeCallerData>true</includeCallerData>
        <!-- 设置为0，不丢失日志。 默认情况下,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志。 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
    </appender>

    <!-- 输出到控制台和文件，可定义更多的 Appender -->
    <root level="INFO">
        <appender-ref ref="Console"/>
        <appender-ref ref="AsyncRollingFile"/>
    </root>

    <!--下面配置一些第三方包的日志过滤级别，用于避免刷屏 -->
    <logger name="com.example" level="DEBUG"/>
    <logger name="io.swagger.models.parameters.AbstractSerializableParameter" level="ERROR"/>
    <logger name="com.zjft.microservice.authadmin.security.AccessSecurityInterceptor" level="INFO"/>
    <logger name="org.mybatis" level="INFO"/>
    <logger name="org.springframework" level="INFO"/>
    <logger name="com.alibaba" level="INFO"/>
    <logger name="org.apache" level="WARN"/>


</configuration>